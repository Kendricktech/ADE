# Generated by Django 4.2.17 on 2025-01-13 21:42

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('NIN', models.CharField(help_text='National Insurance Number', max_length=20, unique=True)),
                ('status', models.CharField(choices=[('verified', 'Verified'), ('pending', 'Pending Verification'), ('suspended', 'Suspended')], default='pending', max_length=20)),
                ('services_offered', models.TextField(help_text='List of services offered by the worker (e.g., cleaning, plumbing).')),
                ('hourly_rate', models.DecimalField(decimal_places=2, help_text='Hourly rate charged by the worker.', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('availability', models.BooleanField(default=True, help_text='Whether the worker is currently available for jobs.')),
                ('rating', models.DecimalField(blank=True, decimal_places=2, help_text='Average rating based on customer reviews.', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('profile_picture', models.ImageField(blank=True, help_text='Profile picture of the worker.', null=True, upload_to='worker_profiles/')),
                ('bio', models.TextField(blank=True, help_text="Worker's professional biography and experience.")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='worker_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-rating', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(help_text='Rating given to the worker, from 1 to 5.', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True, help_text='Optional text feedback from the customer.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(help_text='The user who left the review.', on_delete=django.db.models.deletion.CASCADE, related_name='reviews_made', to=settings.AUTH_USER_MODEL)),
                ('worker', models.ForeignKey(help_text='The worker being reviewed.', on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='services.worker')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_description', models.TextField(help_text='Description of the service requested.')),
                ('scheduled_time', models.DateTimeField(help_text='Scheduled date and time for the service.')),
                ('duration_hours', models.DecimalField(decimal_places=1, help_text='Expected duration of the service in hours.', max_digits=4, validators=[django.core.validators.MinValueValidator(0.5)])),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, help_text='Total cost of the service.', max_digits=10, null=True)),
                ('location', models.TextField(help_text='Service location address.')),
                ('notes', models.TextField(blank=True, help_text='Additional notes or special instructions.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(help_text='Customer who made the booking.', on_delete=django.db.models.deletion.CASCADE, related_name='customer_bookings', to=settings.AUTH_USER_MODEL)),
                ('worker', models.ForeignKey(help_text='Worker assigned to this booking.', on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='services.worker')),
            ],
            options={
                'ordering': ['-scheduled_time'],
            },
        ),
        migrations.AddIndex(
            model_name='worker',
            index=models.Index(fields=['status', 'active'], name='services_wo_status_eaaee9_idx'),
        ),
        migrations.AddIndex(
            model_name='worker',
            index=models.Index(fields=['rating'], name='services_wo_rating_94b892_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['worker', 'created_at'], name='services_re_worker__9cd71b_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['customer', 'created_at'], name='services_re_custome_7861f2_idx'),
        ),
        migrations.AddConstraint(
            model_name='review',
            constraint=models.UniqueConstraint(fields=('worker', 'customer'), name='unique_worker_customer_review'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['worker', 'scheduled_time'], name='services_bo_worker__19b574_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['customer', 'scheduled_time'], name='services_bo_custome_c1dac7_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['status'], name='services_bo_status_e16d15_idx'),
        ),
    ]
